---
# Ping definition
- name: Define traefik ping configuration
  set_fact:
    traefik_config_ping: "{{ traefik_config_ping|combine({ item.key: item.value }) }}"
  when: item.value != "" and 'ping' in traefik_enable and item.key not in traefik_config_ping
  with_dict: "{{ traefik_default_ping }}"

# Backend: Docker definition
- name: Define traefik docker configuration
  set_fact:
    traefik_config_docker: "{{ traefik_config_docker|combine({ item.key: item.value }) }}"
  when: item.value != "" and 'docker' in traefik_enable and item.key not in traefik_config_docker
  with_dict: "{{ traefik_default_docker }}"

- set_fact:
    traefik_volumes: "{{ traefik_volumes }} + [ '{{ traefik_config_docker.socket }}:{{ traefik_config_docker.socket }}' ]"
  when:
    - "'docker' in traefik_enable"
    - traefik_config_docker is defined
    - traefik_config_docker.endpoint is defined
    - traefik_config_docker.socket is defined

  # Backend: ACME definition
- name: Define traefik acme configuration
  set_fact:
    traefik_config_acme: "{{ traefik_config_acme|combine({ item.key: item.value }) }}"
  when:
    - "item.value != ''"
    - "'acme' in traefik_enable"
    - item.key not in traefik_config_acme
  with_dict: "{{ traefik_default_acme }}"

- assert:
    that: traefik_config_acme.email is defined and traefik_config_acme.storage is defined
    msg: an email and storage must be defined to use ACME
  when: "'acme' in traefik_enable"

# configure traefik
- name: Ensure config directory does exist
  file:
    state: directory
    path: '{{ traefik_config_file | dirname }}'

- name: Ensure acme does exist
  file:
    state: touch
    path: '{{ traefik_acme_file }}'
    mode: 0600
  when: "'acme' in traefik_enable"

- name: Ensure traefik config does exist
  template:
    backup: yes
    src: traefik.toml.j2
    dest: '{{ traefik_config_file }}'
  register: result
